% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots_for_performance_metrics.R
\name{plot_decision_curve}
\alias{plot_decision_curve}
\title{Precision Recall Curve from Performance Table}
\usage{
plot_decision_curve(
  performance_table,
  chosen_threshold = NA,
  interactive = F,
  main_slider = "threshold"
)
}
\arguments{
\item{performance_table}{an rtichoke performance table}

\item{chosen_threshold}{a chosen threshold to display}

\item{interactive}{whether the plot should be interactive}

\item{main_slider}{what is the main slider - threshold, percent positives or positives}
}
\description{
Plot a Precision Recall Curve
}
\examples{

one_pop_one_model_as_a_vector \%>\%
  plot_decision_curve()

one_pop_one_model_as_a_vector_enforced_percentiles_symmetry \%>\%
  plot_decision_curve()

one_pop_one_model_as_a_list \%>\%
  plot_decision_curve()

one_pop_one_model_as_a_list_enforced_percentiles_symmetry \%>\%
  plot_decision_curve()

one_pop_three_models \%>\%
  plot_decision_curve()

one_pop_three_models_enforced_percentiles_symmetry \%>\%
  plot_decision_curve()

train_and_test_sets \%>\%
  plot_decision_curve()

train_and_test_sets_enforced_percentiles_symmetry \%>\%
  plot_decision_curve()

\dontrun{

one_pop_one_model_as_a_vector \%>\%
  plot_decision_curve(interactive = T)

one_pop_one_model_as_a_vector_enforced_percentiles_symmetry \%>\%
  plot_decision_curve(interactive = T, main_slider = "predicted_positives_percent")

one_pop_one_model_as_a_list \%>\%
  plot_decision_curve(interactive = T)

one_pop_one_model_as_a_list_enforced_percentiles_symmetry \%>\%
  plot_decision_curve(interactive = T, main_slider = "predicted_positives_percent")

one_pop_three_models \%>\%
  plot_decision_curve(interactive = T)

one_pop_three_models_enforced_percentiles_symmetry \%>\%
  plot_decision_curve(interactive = T, main_slider = "predicted_positives_percent")

train_and_test_sets \%>\%
  plot_decision_curve(interactive = T)

train_and_test_sets_enforced_percentiles_symmetry \%>\%
  plot_decision_curve(interactive = T, main_slider = "predicted_positives_percent")
  }
}
